{"ast":null,"code":"const validation = form => {\n  let errors = {};\n  if (!/^[a-zA-Z\\s]+$/.test(form.name)) {\n    errors.name = 'El nombre no puede contener números ni caracteres especiales';\n  }\n  ;\n  if (!form.name) {\n    errors.name = 'El nuevo Pokemon debe tener un nombre';\n  }\n  if (form.name.length < 4 || form.name.length > 30) {\n    errors.name = 'El nombre del Pokemon debe tener entre 4 y 30 caracteres';\n  }\n  if (!/^(http(s)?:\\/\\/)?([\\w-]+\\.)+[\\w-]+(\\/[\\w-./?%&=]*)?$/.test(form.image)) {\n    errors.image = 'La URL de imagen ingresada no es válida';\n  }\n  if (!form.image) {\n    errors.image = 'El nuevo Pokemon debe tener una imagen';\n  }\n  if (!/^\\d+$/.test(form.hp)) {\n    errors.hp = 'La vida del Pokemon debe ser un número';\n  }\n  if (!form.hp) {\n    errors.hp = 'El nuevo Pokemon debe tener estadísticas vida';\n  }\n  if (form.hp > 800) {\n    errors.hp = 'La vida no puede ser mayor de 800';\n  }\n  if (!/^\\d+$/.test(form.attack)) {\n    errors.attack = 'El ataque del Pokemon debe ser un número';\n  }\n  if (!form.attack) {\n    errors.attack = 'El nuevo Pokemon debe tener estadísticas de ataque';\n  }\n  if (form.attack > 1000) {\n    errors.attack = 'El ataque no puede ser mayor de 1000';\n  }\n  if (!/^\\d+$/.test(form.defense)) {\n    errors.defense = 'La defensa del Pokemon debe ser un número';\n  }\n  if (!form.defense) {\n    errors.defense = 'El nuevo Pokemon debe tener estadísticas de defensa';\n  }\n  if (form.defense > 1000) {\n    errors.defense = 'La defensa no puede ser mayor de 1000';\n  }\n  if (form.speed) {\n    if (!/^\\d+$/.test(form.speed)) {\n      errors.speed = 'La velocidad debe ser un número';\n    }\n    if (form.speed > 850) {\n      errors.speed = 'La velocidad no puede ser mayor de 850';\n    }\n  }\n  if (form.weight) {\n    if (!/^\\d+$/.test(form.weight)) {\n      errors.weight = 'El peso debe ser un número';\n    }\n    if (form.weight > 10000) {\n      errors.weight = 'El peso no puede superar los 10.000 kilogramos';\n    }\n  }\n  if (form.height) {\n    if (!/^\\d+$/.test(form.height)) {\n      errors.height = 'La altura debe ser un número';\n    }\n    if (form.height > 5000) {\n      errors.height = 'La altura no puede superar los 5.000 metros';\n    }\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","form","errors","test","name","length","image","hp","attack","defense","speed","weight","height"],"sources":["C:/Users/Hp/Desktop/PI-Pokemon-main/client/src/components/Validation/validation.js"],"sourcesContent":["const validation = (form) => {\r\n    let errors = {};\r\n\r\n    if(!/^[a-zA-Z\\s]+$/.test(form.name)) {\r\n        errors.name = 'El nombre no puede contener números ni caracteres especiales'};\r\n    if(!form.name) {\r\n        errors.name = 'El nuevo Pokemon debe tener un nombre';\r\n    }\r\n    if(form.name.length < 4 || form.name.length > 30) {\r\n        errors.name = 'El nombre del Pokemon debe tener entre 4 y 30 caracteres';\r\n    }\r\n    if(!/^(http(s)?:\\/\\/)?([\\w-]+\\.)+[\\w-]+(\\/[\\w-./?%&=]*)?$/.test(form.image)) {\r\n        errors.image = 'La URL de imagen ingresada no es válida';\r\n    }\r\n    if(!form.image) {\r\n        errors.image = 'El nuevo Pokemon debe tener una imagen';\r\n    }\r\n    if(!/^\\d+$/.test(form.hp)){\r\n        errors.hp = 'La vida del Pokemon debe ser un número';\r\n    }\r\n    if(!form.hp){\r\n        errors.hp = 'El nuevo Pokemon debe tener estadísticas vida';\r\n    }\r\n    if(form.hp > 800){\r\n        errors.hp = 'La vida no puede ser mayor de 800'\r\n    }\r\n    if(!/^\\d+$/.test(form.attack)){\r\n        errors.attack = 'El ataque del Pokemon debe ser un número';\r\n    }\r\n    if(!form.attack){\r\n        errors.attack = 'El nuevo Pokemon debe tener estadísticas de ataque';\r\n    }\r\n    if(form.attack > 1000){\r\n        errors.attack = 'El ataque no puede ser mayor de 1000';\r\n    }\r\n    if(!/^\\d+$/.test(form.defense)){\r\n        errors.defense = 'La defensa del Pokemon debe ser un número';\r\n    }\r\n    if(!form.defense){\r\n        errors.defense = 'El nuevo Pokemon debe tener estadísticas de defensa';\r\n    }\r\n    if(form.defense > 1000){\r\n        errors.defense = 'La defensa no puede ser mayor de 1000';\r\n    }\r\n    if(form.speed){\r\n        if(!/^\\d+$/.test(form.speed)){\r\n        errors.speed = 'La velocidad debe ser un número';\r\n        }\r\n        if(form.speed > 850){\r\n            errors.speed = 'La velocidad no puede ser mayor de 850';\r\n        }\r\n    }\r\n    if(form.weight){\r\n        if(!/^\\d+$/.test(form.weight)){\r\n        errors.weight = 'El peso debe ser un número';\r\n        }\r\n        if(form.weight > 10000){\r\n            errors.weight = 'El peso no puede superar los 10.000 kilogramos';\r\n        }\r\n    }\r\n    if(form.height){\r\n        if(!/^\\d+$/.test(form.height)){\r\n        errors.height = 'La altura debe ser un número';\r\n        }\r\n        if(form.height > 5000){\r\n            errors.height = 'La altura no puede superar los 5.000 metros';\r\n        }\r\n    }\r\n    \r\n        return errors;\r\n}\r\n\r\nexport default validation;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}