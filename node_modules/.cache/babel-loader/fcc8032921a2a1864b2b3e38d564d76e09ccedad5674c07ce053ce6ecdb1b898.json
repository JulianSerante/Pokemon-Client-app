{"ast":null,"code":"import { FILTER_BY_ORIGIN, FILTER_BY_TYPE, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME } from \"./action_types\";\nconst initialState = {\n  allPokemons: [],\n  filteredPokemons: [],\n  // Nueva propiedad para almacenar los Pokémon filtrados\n  pokemons: [],\n  pokemonDetail: {},\n  pokemonByName: [],\n  actualPage: 1,\n  pokemonPerPage: 12\n};\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        allPokemons: action.payload,\n        filteredPokemons: action.payload,\n        // Almacena los Pokémon filtrados inicialmente en la propiedad\n        pokemons: action.payload\n      };\n    case GET_POKEMON_ID:\n      return {\n        ...state,\n        pokemonDetail: action.payload\n      };\n    case GET_POKEMON_NAME:\n      return {\n        ...state,\n        pokemonByName: action.payload\n      };\n    case FILTER_BY_TYPE:\n      const filteredType = state.allPokemons.filter(pokemon => pokemon.types.some(type => type.name === action.payload));\n      return {\n        ...state,\n        filteredPokemons: filteredType,\n        // Actualiza la lista de Pokémon filtrados\n        pokemons: action.payload === \"allPokemons\" ? state.allPokemons : filteredType\n      };\n    case FILTER_BY_ORIGIN:\n      if (action.payload === \"allPokemons\") {\n        return {\n          ...state,\n          pokemons: state.allPokemons\n        };\n      } else {\n        const isCreated = action.payload === \"true\";\n        const filteredOrigin = state.allPokemons.filter(pokemon => Boolean(pokemon.created) === isCreated);\n        return {\n          ...state,\n          filteredPokemons: filteredOrigin,\n          // Actualiza la lista de Pokémon filtrados\n          pokemons: filteredOrigin\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["FILTER_BY_ORIGIN","FILTER_BY_TYPE","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","initialState","allPokemons","filteredPokemons","pokemons","pokemonDetail","pokemonByName","actualPage","pokemonPerPage","reducer","state","arguments","length","undefined","action","type","payload","filteredType","filter","pokemon","types","some","name","isCreated","filteredOrigin","Boolean","created"],"sources":["C:/Users/Hp/Desktop/PI-Pokemon-main/client/src/redux/reducer.js"],"sourcesContent":["import { FILTER_BY_ORIGIN, FILTER_BY_TYPE, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME } from \"./action_types\";\r\n\r\nconst initialState = {\r\n  allPokemons: [],\r\n  filteredPokemons: [], // Nueva propiedad para almacenar los Pokémon filtrados\r\n  pokemons: [],\r\n  pokemonDetail: {},\r\n  pokemonByName: [],\r\n  actualPage: 1,\r\n  pokemonPerPage: 12,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POKEMONS:\r\n      return {\r\n        ...state,\r\n        allPokemons: action.payload,\r\n        filteredPokemons: action.payload, // Almacena los Pokémon filtrados inicialmente en la propiedad\r\n        pokemons: action.payload,\r\n      };\r\n    case GET_POKEMON_ID:\r\n      return { ...state, pokemonDetail: action.payload };\r\n    case GET_POKEMON_NAME:\r\n      return { ...state, pokemonByName: action.payload };\r\n    case FILTER_BY_TYPE:\r\n      const filteredType = state.allPokemons.filter(pokemon =>\r\n        pokemon.types.some(type => type.name === action.payload)\r\n      );\r\n      return {\r\n        ...state,\r\n        filteredPokemons: filteredType, // Actualiza la lista de Pokémon filtrados\r\n        pokemons: action.payload === \"allPokemons\" ? state.allPokemons : filteredType,\r\n      };\r\n    case FILTER_BY_ORIGIN:\r\n      if (action.payload === \"allPokemons\") {\r\n        return {\r\n          ...state,\r\n          pokemons: state.allPokemons,\r\n        };\r\n      } else {\r\n        const isCreated = action.payload === \"true\";\r\n        const filteredOrigin = state.allPokemons.filter(\r\n          pokemon => Boolean(pokemon.created) === isCreated\r\n        );\r\n        return {\r\n          ...state,\r\n          filteredPokemons: filteredOrigin, // Actualiza la lista de Pokémon filtrados\r\n          pokemons: filteredOrigin,\r\n        };\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,cAAc,EAAEC,YAAY,EAAEC,cAAc,EAAEC,gBAAgB,QAAQ,gBAAgB;AAEjH,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EACfC,gBAAgB,EAAE,EAAE;EAAE;EACtBC,QAAQ,EAAE,EAAE;EACZC,aAAa,EAAE,CAAC,CAAC;EACjBC,aAAa,EAAE,EAAE;EACjBC,UAAU,EAAE,CAAC;EACbC,cAAc,EAAE;AAClB,CAAC;AAED,MAAMC,OAAO,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGV,YAAY;EAAA,IAAEa,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC3C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKjB,YAAY;MACf,OAAO;QACL,GAAGY,KAAK;QACRR,WAAW,EAAEY,MAAM,CAACE,OAAO;QAC3Bb,gBAAgB,EAAEW,MAAM,CAACE,OAAO;QAAE;QAClCZ,QAAQ,EAAEU,MAAM,CAACE;MACnB,CAAC;IACH,KAAKjB,cAAc;MACjB,OAAO;QAAE,GAAGW,KAAK;QAAEL,aAAa,EAAES,MAAM,CAACE;MAAQ,CAAC;IACpD,KAAKhB,gBAAgB;MACnB,OAAO;QAAE,GAAGU,KAAK;QAAEJ,aAAa,EAAEQ,MAAM,CAACE;MAAQ,CAAC;IACpD,KAAKnB,cAAc;MACjB,MAAMoB,YAAY,GAAGP,KAAK,CAACR,WAAW,CAACgB,MAAM,CAACC,OAAO,IACnDA,OAAO,CAACC,KAAK,CAACC,IAAI,CAACN,IAAI,IAAIA,IAAI,CAACO,IAAI,KAAKR,MAAM,CAACE,OAAO,CACzD,CAAC;MACD,OAAO;QACL,GAAGN,KAAK;QACRP,gBAAgB,EAAEc,YAAY;QAAE;QAChCb,QAAQ,EAAEU,MAAM,CAACE,OAAO,KAAK,aAAa,GAAGN,KAAK,CAACR,WAAW,GAAGe;MACnE,CAAC;IACH,KAAKrB,gBAAgB;MACnB,IAAIkB,MAAM,CAACE,OAAO,KAAK,aAAa,EAAE;QACpC,OAAO;UACL,GAAGN,KAAK;UACRN,QAAQ,EAAEM,KAAK,CAACR;QAClB,CAAC;MACH,CAAC,MAAM;QACL,MAAMqB,SAAS,GAAGT,MAAM,CAACE,OAAO,KAAK,MAAM;QAC3C,MAAMQ,cAAc,GAAGd,KAAK,CAACR,WAAW,CAACgB,MAAM,CAC7CC,OAAO,IAAIM,OAAO,CAACN,OAAO,CAACO,OAAO,CAAC,KAAKH,SAC1C,CAAC;QACD,OAAO;UACL,GAAGb,KAAK;UACRP,gBAAgB,EAAEqB,cAAc;UAAE;UAClCpB,QAAQ,EAAEoB;QACZ,CAAC;MACH;IACF;MACE,OAAOd,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}