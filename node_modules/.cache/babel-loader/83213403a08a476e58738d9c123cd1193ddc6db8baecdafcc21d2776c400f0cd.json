{"ast":null,"code":"import axios from 'axios';\nimport { FILTER_BY_ORIGIN, FILTER_BY_TYPE, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME, ORDER_ABC, ORDER_ATTACK } from \"./action_types\";\nexport const getPokemons = (page, order) => {\n  return async function (dispatch) {\n    const apiData = await axios.get(`http://localhost:3001/pokemons?page=${page}&order=${order}`);\n    const pokemons = apiData.data;\n    dispatch({\n      type: GET_POKEMONS,\n      payload: pokemons\n    });\n  };\n};\nexport const getPokemonById = id => {\n  return async function (dispatch) {\n    const apiData = await axios.get(`http://localhost:3001/pokemons/${id}`);\n    const pokemonDetail = apiData.data;\n    dispatch({\n      type: GET_POKEMON_ID,\n      payload: pokemonDetail\n    });\n  };\n};\nexport const getPokemonByName = name => {\n  return async function (dispatch) {\n    const apiData = await axios.get(`http://localhost:3001/pokemons/name?name=${name}`);\n    const pokemonByName = [apiData.data];\n    dispatch({\n      type: GET_POKEMON_NAME,\n      payload: pokemonByName\n    });\n  };\n};\nexport const filterByType = type => {\n  return {\n    type: FILTER_BY_TYPE,\n    payload: type\n  };\n};\nexport const filterByOrigin = origin => {\n  const isCreated = origin === \"true\";\n  if (origin === 'allPokemons') {\n    return getPokemons();\n  } else {\n    return {\n      type: FILTER_BY_ORIGIN,\n      payload: isCreated\n    };\n  }\n};\nexport const orderABC = orderABC => {\n  return async function (dispatch, getState) {\n    const {\n      actualPage\n    } = getState();\n    dispatch({\n      type: ORDER_ABC,\n      payload: orderABC\n    });\n    dispatch(getPokemons(actualPage, orderABC));\n  };\n};\nexport const orderByAttack = orderAttack => {\n  return {\n    type: ORDER_ATTACK,\n    payload: orderAttack\n  };\n};","map":{"version":3,"names":["axios","FILTER_BY_ORIGIN","FILTER_BY_TYPE","GET_POKEMONS","GET_POKEMON_ID","GET_POKEMON_NAME","ORDER_ABC","ORDER_ATTACK","getPokemons","page","order","dispatch","apiData","get","pokemons","data","type","payload","getPokemonById","id","pokemonDetail","getPokemonByName","name","pokemonByName","filterByType","filterByOrigin","origin","isCreated","orderABC","getState","actualPage","orderByAttack","orderAttack"],"sources":["C:/Users/Hp/Desktop/PI-Pokemon-main/client/src/redux/actions.js"],"sourcesContent":["import axios from 'axios';\r\nimport { FILTER_BY_ORIGIN, FILTER_BY_TYPE, GET_POKEMONS, GET_POKEMON_ID, GET_POKEMON_NAME, ORDER_ABC, ORDER_ATTACK } from \"./action_types\";\r\n\r\nexport const getPokemons = (page, order) => {\r\n  return async function(dispatch) {\r\n    const apiData = await axios.get(`http://localhost:3001/pokemons?page=${page}&order=${order}`);\r\n    const pokemons = apiData.data;\r\n    dispatch({ type: GET_POKEMONS, payload: pokemons });\r\n  };\r\n};\r\n\r\nexport const getPokemonById = (id) => {\r\n    return async function(dispatch){\r\n        const apiData = await axios.get(`http://localhost:3001/pokemons/${id}`);\r\n        const pokemonDetail = apiData.data;\r\n        dispatch({ type: GET_POKEMON_ID, payload: pokemonDetail });\r\n    }\r\n}\r\n\r\nexport const getPokemonByName = (name) => {\r\n    return async function(dispatch){\r\n      const apiData = await axios.get(`http://localhost:3001/pokemons/name?name=${name}`);\r\n      const pokemonByName = [apiData.data];\r\n      dispatch({ type: GET_POKEMON_NAME, payload: pokemonByName });\r\n    }\r\n  };\r\n\r\nexport const filterByType = (type) => {\r\n    return({\r\n        type: FILTER_BY_TYPE,\r\n        payload: type\r\n    })\r\n}\r\n\r\nexport const filterByOrigin = (origin) => {\r\n    const isCreated = origin === \"true\";\r\n\r\n    if (origin === 'allPokemons') {\r\n      return getPokemons()\r\n    } else {\r\n      return {\r\n        type: FILTER_BY_ORIGIN,\r\n        payload: isCreated, \r\n      };\r\n    }\r\n  };\r\n\r\n  export const orderABC = (orderABC) => {\r\n    return async function (dispatch, getState) {\r\n      const { actualPage } = getState();\r\n      dispatch({ type: ORDER_ABC, payload: orderABC });\r\n      dispatch(getPokemons(actualPage, orderABC));\r\n    };\r\n  };\r\n\r\nexport const orderByAttack = (orderAttack) => {\r\n    return({\r\n        type: ORDER_ATTACK,\r\n        payload: orderAttack\r\n    })\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,EAAEC,cAAc,EAAEC,YAAY,EAAEC,cAAc,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,YAAY,QAAQ,gBAAgB;AAE1I,OAAO,MAAMC,WAAW,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;EAC1C,OAAO,gBAAeC,QAAQ,EAAE;IAC9B,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,uCAAsCJ,IAAK,UAASC,KAAM,EAAC,CAAC;IAC7F,MAAMI,QAAQ,GAAGF,OAAO,CAACG,IAAI;IAC7BJ,QAAQ,CAAC;MAAEK,IAAI,EAAEb,YAAY;MAAEc,OAAO,EAAEH;IAAS,CAAC,CAAC;EACrD,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,cAAc,GAAIC,EAAE,IAAK;EAClC,OAAO,gBAAeR,QAAQ,EAAC;IAC3B,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,kCAAiCM,EAAG,EAAC,CAAC;IACvE,MAAMC,aAAa,GAAGR,OAAO,CAACG,IAAI;IAClCJ,QAAQ,CAAC;MAAEK,IAAI,EAAEZ,cAAc;MAAEa,OAAO,EAAEG;IAAc,CAAC,CAAC;EAC9D,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;EACtC,OAAO,gBAAeX,QAAQ,EAAC;IAC7B,MAAMC,OAAO,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,4CAA2CS,IAAK,EAAC,CAAC;IACnF,MAAMC,aAAa,GAAG,CAACX,OAAO,CAACG,IAAI,CAAC;IACpCJ,QAAQ,CAAC;MAAEK,IAAI,EAAEX,gBAAgB;MAAEY,OAAO,EAAEM;IAAc,CAAC,CAAC;EAC9D,CAAC;AACH,CAAC;AAEH,OAAO,MAAMC,YAAY,GAAIR,IAAI,IAAK;EAClC,OAAO;IACHA,IAAI,EAAEd,cAAc;IACpBe,OAAO,EAAED;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMS,cAAc,GAAIC,MAAM,IAAK;EACtC,MAAMC,SAAS,GAAGD,MAAM,KAAK,MAAM;EAEnC,IAAIA,MAAM,KAAK,aAAa,EAAE;IAC5B,OAAOlB,WAAW,CAAC,CAAC;EACtB,CAAC,MAAM;IACL,OAAO;MACLQ,IAAI,EAAEf,gBAAgB;MACtBgB,OAAO,EAAEU;IACX,CAAC;EACH;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIA,QAAQ,IAAK;EACpC,OAAO,gBAAgBjB,QAAQ,EAAEkB,QAAQ,EAAE;IACzC,MAAM;MAAEC;IAAW,CAAC,GAAGD,QAAQ,CAAC,CAAC;IACjClB,QAAQ,CAAC;MAAEK,IAAI,EAAEV,SAAS;MAAEW,OAAO,EAAEW;IAAS,CAAC,CAAC;IAChDjB,QAAQ,CAACH,WAAW,CAACsB,UAAU,EAAEF,QAAQ,CAAC,CAAC;EAC7C,CAAC;AACH,CAAC;AAEH,OAAO,MAAMG,aAAa,GAAIC,WAAW,IAAK;EAC1C,OAAO;IACHhB,IAAI,EAAET,YAAY;IAClBU,OAAO,EAAEe;EACb,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}